// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using web_req_volcano.Models;

#nullable disable

namespace web_req_volcano.Migrations
{
    [DbContext(typeof(ReqHrVolcanoContext))]
    partial class ReqHrVolcanoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.AspNetUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"), 1L, 1);

                    b.Property<string>("CarIdNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CarNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarSpecifications")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Car", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.CarInv", b =>
                {
                    b.Property<int>("CarInvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarInvId"), 1L, 1);

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CarInvDate")
                        .HasColumnType("date");

                    b.Property<string>("CarInvNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarInvId");

                    b.ToTable("CarInv", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.CarInvFile", b =>
                {
                    b.Property<int>("CarInvFilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CarInv_FilesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarInvFilesId"), 1L, 1);

                    b.Property<string>("CarInvFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CarInv_FileName");

                    b.Property<string>("CarInvFilePath")
                        .HasColumnType("ntext")
                        .HasColumnName("CarInv_FilePath");

                    b.Property<int?>("CarInvId")
                        .HasColumnType("int");

                    b.HasKey("CarInvFilesId");

                    b.HasIndex("CarInvId");

                    b.ToTable("CarInv_Files", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.CompanyPaper", b =>
                {
                    b.Property<int>("CompanyPapersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyPapersId"), 1L, 1);

                    b.Property<DateTime?>("CompanyPapersDate")
                        .HasColumnType("date");

                    b.Property<string>("CompanyPapersNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyPapersYear")
                        .HasColumnType("int");

                    b.Property<int?>("PapersId")
                        .HasColumnType("int");

                    b.HasKey("CompanyPapersId");

                    b.HasIndex("PapersId");

                    b.ToTable("CompanyPapers");
                });

            modelBuilder.Entity("web_req_volcano.Models.CompanyPapersFile", b =>
                {
                    b.Property<int>("CompanyPapersFilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanyPapers_FilesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyPapersFilesId"), 1L, 1);

                    b.Property<string>("CompanyPapersFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CompanyPapers_FileName");

                    b.Property<string>("CompanyPapersFilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CompanyPapers_FilePath");

                    b.Property<int?>("CompanyPapersId")
                        .HasColumnType("int");

                    b.HasKey("CompanyPapersFilesId");

                    b.HasIndex("CompanyPapersId");

                    b.ToTable("CompanyPapers_Files", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.Covenant", b =>
                {
                    b.Property<int>("CovenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CovenantId"), 1L, 1);

                    b.Property<string>("CovenantNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CovenantNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CovenantId");

                    b.ToTable("Covenant", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.Cust", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustId"), 1L, 1);

                    b.Property<int?>("CustCommissioner")
                        .HasColumnType("int");

                    b.Property<string>("CustEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustIdNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CustNameAR");

                    b.Property<string>("CustNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CustNameEN");

                    b.Property<string>("CustNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustRegion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustResponsible")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustId");

                    b.HasIndex("CustCommissioner");

                    b.ToTable("Cust", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.CustomerStatement", b =>
                {
                    b.Property<int>("CustomerStatementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerStatementId"), 1L, 1);

                    b.Property<string>("Ccto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CCTO");

                    b.Property<int?>("CustomerStatementCustId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CustomerStatementDate")
                        .HasColumnType("date");

                    b.Property<int>("CustomerStatementEmpFrom")
                        .HasColumnType("int");

                    b.Property<int>("CustomerStatementEmpTo")
                        .HasColumnType("int");

                    b.Property<string>("CustomerStatementNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerStatementId");

                    b.HasIndex("CustomerStatementCustId");

                    b.HasIndex("CustomerStatementEmpFrom");

                    b.HasIndex("CustomerStatementEmpTo");

                    b.ToTable("CustomerStatement", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptCar", b =>
                {
                    b.Property<int>("DeliveryReceiptCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Delivery_Receipt_CarId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryReceiptCarId"), 1L, 1);

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Ccto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CCTO");

                    b.Property<DateTime?>("DeliveryReceiptCarCurrentDate")
                        .HasColumnType("date")
                        .HasColumnName("Delivery_Receipt_CarCurrentDate");

                    b.Property<DateTime?>("DeliveryReceiptCarDate")
                        .HasColumnType("date")
                        .HasColumnName("Delivery_Receipt_CarDate");

                    b.Property<int?>("DeliveryReceiptCarEmpFrom")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_Receipt_CarEmpFrom");

                    b.Property<int?>("DeliveryReceiptCarEmpTo")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_Receipt_CarEmpTo");

                    b.Property<short?>("DeliveryReceiptCarIsIn")
                        .HasColumnType("smallint")
                        .HasColumnName("Delivery_Receipt_Car_IsIn");

                    b.Property<string>("DeliveryReceiptCarNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Delivery_Receipt_CarNote");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeliveryReceiptCarId");

                    b.HasIndex("CarId");

                    b.HasIndex("DeliveryReceiptCarEmpFrom");

                    b.HasIndex("DeliveryReceiptCarEmpTo");

                    b.ToTable("Delivery_Receipt_Car", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptCarFile", b =>
                {
                    b.Property<int>("DeliveryReceiptCarFilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Delivery_Receipt_Car_FilesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryReceiptCarFilesId"), 1L, 1);

                    b.Property<string>("DeliveryReceiptCarFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Delivery_Receipt_Car_FileName");

                    b.Property<string>("DeliveryReceiptCarFilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Delivery_Receipt_Car_FilePath");

                    b.Property<int?>("DeliveryReceiptCarId")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_Receipt_CarId");

                    b.HasKey("DeliveryReceiptCarFilesId");

                    b.HasIndex("DeliveryReceiptCarId");

                    b.ToTable("Delivery_Receipt_Car_Files", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptCovenant", b =>
                {
                    b.Property<int>("DeliveryReceiptCovenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Delivery_receipt_covenantId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryReceiptCovenantId"), 1L, 1);

                    b.Property<string>("Ccto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CCTO");

                    b.Property<int>("CovenantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveryReceiptCovenantCurrentDate")
                        .HasColumnType("date")
                        .HasColumnName("Delivery_receipt_covenantCurrentDate");

                    b.Property<DateTime?>("DeliveryReceiptCovenantDate")
                        .HasColumnType("date")
                        .HasColumnName("Delivery_receipt_covenantDate");

                    b.Property<int>("DeliveryReceiptCovenantEmpFrom")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_receipt_covenantEmpFrom");

                    b.Property<int>("DeliveryReceiptCovenantEmpTo")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_receipt_covenantEmpTo");

                    b.Property<bool?>("DeliveryReceiptCovenantIsIn")
                        .HasColumnType("bit")
                        .HasColumnName("Delivery_receipt_covenant_IsIn");

                    b.Property<string>("DeliveryReceiptCovenantNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Delivery_receipt_covenantNote");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeliveryReceiptCovenantId");

                    b.HasIndex("CovenantId");

                    b.HasIndex("DeliveryReceiptCovenantEmpFrom");

                    b.HasIndex("DeliveryReceiptCovenantEmpTo");

                    b.ToTable("Delivery_receipt_covenant", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptCovenantFile", b =>
                {
                    b.Property<int>("DeliveryReceiptCovenantFilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Delivery_receipt_covenant_FilesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryReceiptCovenantFilesId"), 1L, 1);

                    b.Property<string>("DeliveryReceiptCovenantFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Delivery_receipt_covenant_FileName");

                    b.Property<string>("DeliveryReceiptCovenantFilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Delivery_receipt_covenant_FilePath");

                    b.Property<int?>("DeliveryReceiptCovenantId")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_receipt_covenantId");

                    b.HasKey("DeliveryReceiptCovenantFilesId");

                    b.HasIndex("DeliveryReceiptCovenantId");

                    b.ToTable("Delivery_receipt_covenant_Files", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptRequest", b =>
                {
                    b.Property<int>("DeliveryReceiptRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Delivery_receipt_requestId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryReceiptRequestId"), 1L, 1);

                    b.Property<string>("Ccto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CCTO");

                    b.Property<DateTime?>("DeliveryReceiptRequestCurrentDate")
                        .HasColumnType("date")
                        .HasColumnName("Delivery_receipt_requestCurrentDate");

                    b.Property<DateTime?>("DeliveryReceiptRequestDate")
                        .HasColumnType("date")
                        .HasColumnName("Delivery_receipt_requestDate");

                    b.Property<int>("DeliveryReceiptRequestEmpFrom")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_receipt_requestEmpFrom");

                    b.Property<int>("DeliveryReceiptRequestEmpTo")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_receipt_requestEmpTo");

                    b.Property<bool?>("DeliveryReceiptRequestIsIn")
                        .HasColumnType("bit")
                        .HasColumnName("Delivery_receipt_request_IsIn");

                    b.Property<string>("DeliveryReceiptRequestNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Delivery_receipt_requestNote");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("requestId");

                    b.HasKey("DeliveryReceiptRequestId");

                    b.HasIndex("DeliveryReceiptRequestEmpFrom");

                    b.HasIndex("DeliveryReceiptRequestEmpTo");

                    b.HasIndex("RequestId");

                    b.ToTable("Delivery_receipt_request", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptRequestFile", b =>
                {
                    b.Property<int>("DeliveryReceiptRequestFilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Delivery_receipt_request_FilesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryReceiptRequestFilesId"), 1L, 1);

                    b.Property<string>("DeliveryReceiptRequestFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Delivery_receipt_request_FileName");

                    b.Property<string>("DeliveryReceiptRequestFilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Delivery_receipt_request_FilePath");

                    b.Property<int?>("DeliveryReceiptRequestId")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_receipt_requestId");

                    b.HasKey("DeliveryReceiptRequestFilesId");

                    b.HasIndex("DeliveryReceiptRequestId");

                    b.ToTable("Delivery_receipt_request_Files", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.Emp", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"), 1L, 1);

                    b.Property<string>("EmpIdNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("EmpIsPosetion")
                        .HasColumnType("bit");

                    b.Property<string>("EmpMobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EmpNameAR");

                    b.Property<string>("EmpNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EmpNameEN");

                    b.Property<int?>("EmpNatId")
                        .HasColumnType("int");

                    b.Property<string>("EmpNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpSecId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmpId");

                    b.HasIndex("EmpNatId");

                    b.HasIndex("EmpSecId");

                    b.HasIndex("UserId");

                    b.ToTable("Emp", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.EngineeringDepartment", b =>
                {
                    b.Property<int>("EngineeringDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ccto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CCTO");

                    b.Property<int>("EngineeringDepartmentCustId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EngineeringDepartmentDate")
                        .HasColumnType("date");

                    b.Property<int>("EngineeringDepartmentEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EngineeringDepartmentEmpTo")
                        .HasColumnType("int");

                    b.Property<int>("EngineeringDepartmentItemId")
                        .HasColumnType("int");

                    b.Property<string>("EngineeringDepartmentNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EngineeringDepartmentQuantity")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("EngineeringDepartmentTotal")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EngineeringDepartmentId");

                    b.HasIndex("EngineeringDepartmentCustId");

                    b.HasIndex("EngineeringDepartmentItemId");

                    b.ToTable("EngineeringDepartment", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.EngineeringDepartmentFile", b =>
                {
                    b.Property<int>("EngineeringDepartmentFilesId")
                        .HasColumnType("int")
                        .HasColumnName("EngineeringDepartment_FilesId");

                    b.Property<string>("EngineeringDepartmentFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EngineeringDepartment_FileName");

                    b.Property<string>("EngineeringDepartmentFilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EngineeringDepartment_FilePath");

                    b.Property<int?>("EngineeringDepartmentId")
                        .HasColumnType("int");

                    b.HasKey("EngineeringDepartmentFilesId");

                    b.HasIndex("EngineeringDepartmentId");

                    b.ToTable("EngineeringDepartment_Files", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.Inv", b =>
                {
                    b.Property<int>("InvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvId"), 1L, 1);

                    b.Property<DateTime?>("InvDate")
                        .HasColumnType("date");

                    b.Property<string>("InvNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("InvId");

                    b.HasIndex("ItemId");

                    b.ToTable("Inv", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.InvFile", b =>
                {
                    b.Property<int>("InvFilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Inv_FilesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvFilesId"), 1L, 1);

                    b.Property<string>("InvFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Inv_FileName");

                    b.Property<string>("InvFilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Inv_FilePath");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.HasKey("InvFilesId");

                    b.HasIndex("InvId");

                    b.ToTable("Inv_Files", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"), 1L, 1);

                    b.Property<string>("ItemBrand")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemIndustry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ItemNameAR");

                    b.Property<string>("ItemNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ItemNameEN");

                    b.Property<string>("ItemNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ItemPrice")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("ItemId");

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.MaintenanceDepartment", b =>
                {
                    b.Property<int>("MaintenanceDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintenanceDepartmentId"), 1L, 1);

                    b.Property<string>("Ccto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CCTO");

                    b.Property<int>("MaintenanceDepartmentCustId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MaintenanceDepartmentDate")
                        .HasColumnType("date");

                    b.Property<int>("MaintenanceDepartmentEmpId")
                        .HasColumnType("int");

                    b.Property<int>("MaintenanceDepartmentItemId")
                        .HasColumnType("int");

                    b.Property<string>("MaintenanceDepartmentNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MaintenanceDepartmentQuantity")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("MaintenanceDepartmentTotal")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaintenanceDepartmentId");

                    b.HasIndex("MaintenanceDepartmentCustId");

                    b.HasIndex("MaintenanceDepartmentEmpId");

                    b.HasIndex("MaintenanceDepartmentItemId");

                    b.ToTable("MaintenanceDepartment", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.MaintenanceDepartmentFile", b =>
                {
                    b.Property<int>("MaintenanceDepartmentFilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaintenanceDepartment_FilesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintenanceDepartmentFilesId"), 1L, 1);

                    b.Property<string>("MaintenanceDepartmentFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MaintenanceDepartment_FileName");

                    b.Property<string>("MaintenanceDepartmentFilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaintenanceDepartment_FilePath");

                    b.Property<int?>("MaintenanceDepartmentId")
                        .HasColumnType("int");

                    b.HasKey("MaintenanceDepartmentFilesId");

                    b.HasIndex("MaintenanceDepartmentId");

                    b.ToTable("MaintenanceDepartment_Files", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.MaintenanceReport", b =>
                {
                    b.Property<int>("MaintenanceReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintenanceReportId"), 1L, 1);

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.Property<string>("MaintenanceReportBatch")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("MaintenanceReportDeliveryDate")
                        .HasColumnType("date");

                    b.Property<int>("MaintenanceReportEmp")
                        .HasColumnType("int");

                    b.Property<string>("MaintenanceReportEng")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaintenanceReportNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MaintenanceReportRunOrderDate")
                        .HasColumnType("date");

                    b.HasKey("MaintenanceReportId");

                    b.HasIndex("CustId");

                    b.HasIndex("MaintenanceReportEmp");

                    b.ToTable("MaintenanceReport", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.MaintenanceReportFile", b =>
                {
                    b.Property<int>("MaintenanceReportFilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaintenanceReport_FilesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintenanceReportFilesId"), 1L, 1);

                    b.Property<string>("MaintenanceReportFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MaintenanceReport_FileName");

                    b.Property<string>("MaintenanceReportFilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaintenanceReport_FilePath");

                    b.Property<int?>("MaintenanceReportId")
                        .HasColumnType("int");

                    b.HasKey("MaintenanceReportFilesId");

                    b.HasIndex("MaintenanceReportId");

                    b.ToTable("MaintenanceReport_Files", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"), 1L, 1);

                    b.Property<string>("Message1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Message");

                    b.Property<DateTime?>("MessageDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("MessageEmpFrom")
                        .HasColumnType("int");

                    b.Property<int?>("MessageEmpTo")
                        .HasColumnType("int");

                    b.Property<int?>("MessageType")
                        .HasColumnType("int");

                    b.HasKey("MessageId");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.Nationality", b =>
                {
                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalityId"), 1L, 1);

                    b.Property<string>("NationalityNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalityNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NationalityId");

                    b.ToTable("Nationality", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.Offer", b =>
                {
                    b.Property<int>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferId"), 1L, 1);

                    b.Property<string>("OfferNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OfferNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OfferId");

                    b.ToTable("Offer", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.Paper", b =>
                {
                    b.Property<int>("PapersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PapersId"), 1L, 1);

                    b.Property<string>("PapersNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PapersNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PapersId");

                    b.ToTable("Papers");
                });

            modelBuilder.Entity("web_req_volcano.Models.PricingMatter", b =>
                {
                    b.Property<int>("PricingMatterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PricingMatterId"), 1L, 1);

                    b.Property<int>("PricingMatterEmpFrom")
                        .HasColumnType("int");

                    b.Property<int>("PricingMatterEmpTo")
                        .HasColumnType("int");

                    b.Property<string>("PricingMatterNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PricingMatterId");

                    b.ToTable("PricingMatter", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.PricingMatterItem", b =>
                {
                    b.Property<int>("PricingMatterItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PricingMatterItemId"), 1L, 1);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("PricingMatterId")
                        .HasColumnType("int");

                    b.HasKey("PricingMatterItemId");

                    b.ToTable("PricingMatterItem", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.ProjectCertificate", b =>
                {
                    b.Property<int>("ProjectCertificatesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectCertificatesId"), 1L, 1);

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCertificatesBatch")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ProjectCertificatesDeliveryDate")
                        .HasColumnType("date");

                    b.Property<int>("ProjectCertificatesEmp")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCertificatesEng")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProjectCertificatesNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjectCertificatesRunOrderDate")
                        .HasColumnType("date");

                    b.HasKey("ProjectCertificatesId");

                    b.HasIndex("CustId");

                    b.HasIndex("ProjectCertificatesEmp");

                    b.ToTable("ProjectCertificates");
                });

            modelBuilder.Entity("web_req_volcano.Models.ProjectCertificatesFile", b =>
                {
                    b.Property<int>("ProjectCertificatesFilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProjectCertificates_FilesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectCertificatesFilesId"), 1L, 1);

                    b.Property<string>("ProjectCertificatesFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProjectCertificates_FileName");

                    b.Property<string>("ProjectCertificatesFilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProjectCertificates_FilePath");

                    b.Property<int?>("ProjectCertificatesId")
                        .HasColumnType("int");

                    b.HasKey("ProjectCertificatesFilesId");

                    b.HasIndex("ProjectCertificatesId");

                    b.ToTable("ProjectCertificates_Files", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.PublicCompany", b =>
                {
                    b.Property<int>("PublicCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublicCompanyId"), 1L, 1);

                    b.Property<DateTime?>("PublicCompanyDate")
                        .HasColumnType("date");

                    b.Property<string>("PublicCompanyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PublicCompanyId");

                    b.ToTable("PublicCompany", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.PublicCompanyFile", b =>
                {
                    b.Property<int>("PublicCompanyFilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PublicCompany_FilesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublicCompanyFilesId"), 1L, 1);

                    b.Property<string>("PublicCompanyFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PublicCompany_FileName");

                    b.Property<string>("PublicCompanyFilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PublicCompany_FilePath");

                    b.Property<int?>("PublicCompanyId")
                        .HasColumnType("int");

                    b.HasKey("PublicCompanyFilesId");

                    b.HasIndex("PublicCompanyId");

                    b.ToTable("PublicCompany_Files", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.PublicCompanySection", b =>
                {
                    b.Property<int>("PublicCompanySectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublicCompanySectionId"), 1L, 1);

                    b.Property<int?>("PublicCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("SecId")
                        .HasColumnType("int");

                    b.HasKey("PublicCompanySectionId");

                    b.HasIndex("PublicCompanyId");

                    b.HasIndex("SecId");

                    b.ToTable("PublicCompanySection", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderId"), 1L, 1);

                    b.Property<string>("Ccto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CCTO");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseOrderEmpFrom")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderEmpTo")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseOrderNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchaseOrderId");

                    b.HasIndex("PurchaseOrderEmpFrom");

                    b.HasIndex("PurchaseOrderEmpTo");

                    b.ToTable("PurchaseOrder", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.PurchaseOrderItem", b =>
                {
                    b.Property<int>("PurchaseOrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderItemId"), 1L, 1);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseOrderItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderItem", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("requestId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"), 1L, 1);

                    b.Property<string>("RequestNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("requestNameAr");

                    b.Property<string>("RequestNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("requestNameEn");

                    b.HasKey("RequestId");

                    b.ToTable("request", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.RequestQuote", b =>
                {
                    b.Property<int>("RequestQuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestQuoteId"), 1L, 1);

                    b.Property<string>("Ccto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CCTO");

                    b.Property<int?>("EngineeringDepartmentEmpTo")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestQuoteCustId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RequestQuoteDate")
                        .HasColumnType("date");

                    b.Property<int>("RequestQuoteEmpId")
                        .HasColumnType("int");

                    b.Property<int>("RequestQuoteItemId")
                        .HasColumnType("int");

                    b.Property<string>("RequestQuoteNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestQuoteOfferId")
                        .HasColumnType("int");

                    b.Property<int>("RequestQuoteQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("RequestQuoteTotal")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("RequestQuoteId");

                    b.HasIndex("RequestQuoteCustId");

                    b.HasIndex("RequestQuoteEmpId");

                    b.HasIndex("RequestQuoteItemId");

                    b.HasIndex("RequestQuoteOfferId");

                    b.ToTable("RequestQuote", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.RequestQuoteFile", b =>
                {
                    b.Property<int>("RequestQuoteFilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequestQuote_FilesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestQuoteFilesId"), 1L, 1);

                    b.Property<string>("RequestQuoteFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RequestQuote_FileName");

                    b.Property<string>("RequestQuoteFilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RequestQuote_FilePath");

                    b.Property<int?>("RequestQuoteId")
                        .HasColumnType("int");

                    b.HasKey("RequestQuoteFilesId");

                    b.HasIndex("RequestQuoteId");

                    b.ToTable("RequestQuote_Files", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"), 1L, 1);

                    b.Property<string>("SectionNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SectionNameAR");

                    b.Property<string>("SectionNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SectionNameEN");

                    b.Property<string>("SectionNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectionId");

                    b.ToTable("Section", (string)null);
                });

            modelBuilder.Entity("web_req_volcano.Models.VehicleType", b =>
                {
                    b.Property<int>("VehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleTypeId"), 1L, 1);

                    b.Property<string>("VehicleTypeNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VehicleTypeNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VehicleTypeId");

                    b.ToTable("VehicleType", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("web_req_volcano.Models.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("web_req_volcano.Models.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web_req_volcano.Models.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("web_req_volcano.Models.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("web_req_volcano.Models.Car", b =>
                {
                    b.HasOne("web_req_volcano.Models.VehicleType", "VehicleType")
                        .WithMany("Cars")
                        .HasForeignKey("VehicleTypeId")
                        .HasConstraintName("FK_Car_VehicleType");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("web_req_volcano.Models.CarInvFile", b =>
                {
                    b.HasOne("web_req_volcano.Models.CarInv", "CarInv")
                        .WithMany("CarInvFiles")
                        .HasForeignKey("CarInvId")
                        .HasConstraintName("FK_CarInv_Files_CarInv");

                    b.Navigation("CarInv");
                });

            modelBuilder.Entity("web_req_volcano.Models.CompanyPaper", b =>
                {
                    b.HasOne("web_req_volcano.Models.Paper", "Papers")
                        .WithMany("CompanyPapers")
                        .HasForeignKey("PapersId")
                        .HasConstraintName("FK_CompanyPapers_Papers");

                    b.Navigation("Papers");
                });

            modelBuilder.Entity("web_req_volcano.Models.CompanyPapersFile", b =>
                {
                    b.HasOne("web_req_volcano.Models.CompanyPaper", "CompanyPapers")
                        .WithMany("CompanyPapersFiles")
                        .HasForeignKey("CompanyPapersId")
                        .HasConstraintName("FK_CompanyPapers_Files_CompanyPapers");

                    b.Navigation("CompanyPapers");
                });

            modelBuilder.Entity("web_req_volcano.Models.Cust", b =>
                {
                    b.HasOne("web_req_volcano.Models.Emp", "CustCommissionerNavigation")
                        .WithMany("Custs")
                        .HasForeignKey("CustCommissioner")
                        .HasConstraintName("FK_Cust_Emp");

                    b.Navigation("CustCommissionerNavigation");
                });

            modelBuilder.Entity("web_req_volcano.Models.CustomerStatement", b =>
                {
                    b.HasOne("web_req_volcano.Models.Cust", "CustomerStatementCust")
                        .WithMany("CustomerStatements")
                        .HasForeignKey("CustomerStatementCustId")
                        .HasConstraintName("FK_CustomerStatement_Cust");

                    b.HasOne("web_req_volcano.Models.Emp", "CustomerStatementEmpFromNavigation")
                        .WithMany("CustomerStatementCustomerStatementEmpFromNavigations")
                        .HasForeignKey("CustomerStatementEmpFrom")
                        .IsRequired()
                        .HasConstraintName("FK_CustomerStatement_Emp1");

                    b.HasOne("web_req_volcano.Models.Emp", "CustomerStatementEmpToNavigation")
                        .WithMany("CustomerStatementCustomerStatementEmpToNavigations")
                        .HasForeignKey("CustomerStatementEmpTo")
                        .IsRequired()
                        .HasConstraintName("FK_CustomerStatement_Emp");

                    b.Navigation("CustomerStatementCust");

                    b.Navigation("CustomerStatementEmpFromNavigation");

                    b.Navigation("CustomerStatementEmpToNavigation");
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptCar", b =>
                {
                    b.HasOne("web_req_volcano.Models.Car", "Car")
                        .WithMany("DeliveryReceiptCars")
                        .HasForeignKey("CarId")
                        .HasConstraintName("FK_Delivery_Receipt_Car_Car");

                    b.HasOne("web_req_volcano.Models.Emp", "DeliveryReceiptCarEmpFromNavigation")
                        .WithMany("DeliveryReceiptCarDeliveryReceiptCarEmpFromNavigations")
                        .HasForeignKey("DeliveryReceiptCarEmpFrom")
                        .HasConstraintName("FK_Delivery_Receipt_Car_Emp");

                    b.HasOne("web_req_volcano.Models.Emp", "DeliveryReceiptCarEmpToNavigation")
                        .WithMany("DeliveryReceiptCarDeliveryReceiptCarEmpToNavigations")
                        .HasForeignKey("DeliveryReceiptCarEmpTo")
                        .HasConstraintName("FK_Delivery_Receipt_Car_Emp1");

                    b.Navigation("Car");

                    b.Navigation("DeliveryReceiptCarEmpFromNavigation");

                    b.Navigation("DeliveryReceiptCarEmpToNavigation");
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptCarFile", b =>
                {
                    b.HasOne("web_req_volcano.Models.DeliveryReceiptCar", "DeliveryReceiptCar")
                        .WithMany("DeliveryReceiptCarFiles")
                        .HasForeignKey("DeliveryReceiptCarId")
                        .HasConstraintName("FK_Delivery_Receipt_Car_Files_Delivery_Receipt_Car");

                    b.Navigation("DeliveryReceiptCar");
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptCovenant", b =>
                {
                    b.HasOne("web_req_volcano.Models.Covenant", "Covenant")
                        .WithMany("DeliveryReceiptCovenants")
                        .HasForeignKey("CovenantId")
                        .IsRequired()
                        .HasConstraintName("FK_Delivery_receipt_covenant_Covenant");

                    b.HasOne("web_req_volcano.Models.Emp", "DeliveryReceiptCovenantEmpFromNavigation")
                        .WithMany("DeliveryReceiptCovenantDeliveryReceiptCovenantEmpFromNavigations")
                        .HasForeignKey("DeliveryReceiptCovenantEmpFrom")
                        .IsRequired()
                        .HasConstraintName("FK_Delivery_receipt_covenant_Emp");

                    b.HasOne("web_req_volcano.Models.Emp", "DeliveryReceiptCovenantEmpToNavigation")
                        .WithMany("DeliveryReceiptCovenantDeliveryReceiptCovenantEmpToNavigations")
                        .HasForeignKey("DeliveryReceiptCovenantEmpTo")
                        .IsRequired()
                        .HasConstraintName("FK_Delivery_receipt_covenant_Emp1");

                    b.Navigation("Covenant");

                    b.Navigation("DeliveryReceiptCovenantEmpFromNavigation");

                    b.Navigation("DeliveryReceiptCovenantEmpToNavigation");
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptCovenantFile", b =>
                {
                    b.HasOne("web_req_volcano.Models.DeliveryReceiptCovenant", "DeliveryReceiptCovenant")
                        .WithMany("DeliveryReceiptCovenantFiles")
                        .HasForeignKey("DeliveryReceiptCovenantId")
                        .HasConstraintName("FK_Delivery_receipt_covenant_Files_Delivery_receipt_covenant");

                    b.Navigation("DeliveryReceiptCovenant");
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptRequest", b =>
                {
                    b.HasOne("web_req_volcano.Models.Emp", "DeliveryReceiptRequestEmpFromNavigation")
                        .WithMany("DeliveryReceiptRequestDeliveryReceiptRequestEmpFromNavigations")
                        .HasForeignKey("DeliveryReceiptRequestEmpFrom")
                        .IsRequired()
                        .HasConstraintName("FK_Delivery_receipt_request_Emp");

                    b.HasOne("web_req_volcano.Models.Emp", "DeliveryReceiptRequestEmpToNavigation")
                        .WithMany("DeliveryReceiptRequestDeliveryReceiptRequestEmpToNavigations")
                        .HasForeignKey("DeliveryReceiptRequestEmpTo")
                        .IsRequired()
                        .HasConstraintName("FK_Delivery_receipt_request_Emp1");

                    b.HasOne("web_req_volcano.Models.Request", "Request")
                        .WithMany("DeliveryReceiptRequests")
                        .HasForeignKey("RequestId")
                        .IsRequired()
                        .HasConstraintName("FK_Delivery_receipt_request_request");

                    b.Navigation("DeliveryReceiptRequestEmpFromNavigation");

                    b.Navigation("DeliveryReceiptRequestEmpToNavigation");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptRequestFile", b =>
                {
                    b.HasOne("web_req_volcano.Models.DeliveryReceiptRequest", "DeliveryReceiptRequest")
                        .WithMany("DeliveryReceiptRequestFiles")
                        .HasForeignKey("DeliveryReceiptRequestId")
                        .HasConstraintName("FK_Delivery_receipt_request_Files_Delivery_receipt_request");

                    b.Navigation("DeliveryReceiptRequest");
                });

            modelBuilder.Entity("web_req_volcano.Models.Emp", b =>
                {
                    b.HasOne("web_req_volcano.Models.Nationality", "EmpNat")
                        .WithMany("Emps")
                        .HasForeignKey("EmpNatId")
                        .HasConstraintName("FK_Emp_Nationality");

                    b.HasOne("web_req_volcano.Models.Section", "EmpSec")
                        .WithMany("Emps")
                        .HasForeignKey("EmpSecId")
                        .HasConstraintName("FK_Emp_Section");

                    b.HasOne("web_req_volcano.Models.AspNetUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("EmpNat");

                    b.Navigation("EmpSec");

                    b.Navigation("User");
                });

            modelBuilder.Entity("web_req_volcano.Models.EngineeringDepartment", b =>
                {
                    b.HasOne("web_req_volcano.Models.Cust", "EngineeringDepartmentCust")
                        .WithMany("EngineeringDepartments")
                        .HasForeignKey("EngineeringDepartmentCustId")
                        .IsRequired()
                        .HasConstraintName("FK_EngineeringDepartment_Cust");

                    b.HasOne("web_req_volcano.Models.Emp", "EngineeringDepartmentNavigation")
                        .WithOne("EngineeringDepartment")
                        .HasForeignKey("web_req_volcano.Models.EngineeringDepartment", "EngineeringDepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_EngineeringDepartment_Emp");

                    b.HasOne("web_req_volcano.Models.Item", "EngineeringDepartmentItem")
                        .WithMany("EngineeringDepartments")
                        .HasForeignKey("EngineeringDepartmentItemId")
                        .IsRequired()
                        .HasConstraintName("FK_EngineeringDepartment_Item");

                    b.Navigation("EngineeringDepartmentCust");

                    b.Navigation("EngineeringDepartmentItem");

                    b.Navigation("EngineeringDepartmentNavigation");
                });

            modelBuilder.Entity("web_req_volcano.Models.EngineeringDepartmentFile", b =>
                {
                    b.HasOne("web_req_volcano.Models.EngineeringDepartment", "EngineeringDepartment")
                        .WithMany("EngineeringDepartmentFiles")
                        .HasForeignKey("EngineeringDepartmentId")
                        .HasConstraintName("FK_EngineeringDepartment_Files_EngineeringDepartment");

                    b.Navigation("EngineeringDepartment");
                });

            modelBuilder.Entity("web_req_volcano.Models.Inv", b =>
                {
                    b.HasOne("web_req_volcano.Models.Item", "Item")
                        .WithMany("Invs")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_Inv_Item");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("web_req_volcano.Models.InvFile", b =>
                {
                    b.HasOne("web_req_volcano.Models.Inv", "Inv")
                        .WithMany("InvFiles")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Inv_Files_Inv");

                    b.Navigation("Inv");
                });

            modelBuilder.Entity("web_req_volcano.Models.MaintenanceDepartment", b =>
                {
                    b.HasOne("web_req_volcano.Models.Cust", "MaintenanceDepartmentCust")
                        .WithMany("MaintenanceDepartments")
                        .HasForeignKey("MaintenanceDepartmentCustId")
                        .IsRequired()
                        .HasConstraintName("FK_MaintenanceDepartment_Cust");

                    b.HasOne("web_req_volcano.Models.Emp", "MaintenanceDepartmentEmp")
                        .WithMany("MaintenanceDepartments")
                        .HasForeignKey("MaintenanceDepartmentEmpId")
                        .IsRequired()
                        .HasConstraintName("FK_MaintenanceDepartment_Emp");

                    b.HasOne("web_req_volcano.Models.Item", "MaintenanceDepartmentItem")
                        .WithMany("MaintenanceDepartments")
                        .HasForeignKey("MaintenanceDepartmentItemId")
                        .IsRequired()
                        .HasConstraintName("FK_MaintenanceDepartment_Item");

                    b.Navigation("MaintenanceDepartmentCust");

                    b.Navigation("MaintenanceDepartmentEmp");

                    b.Navigation("MaintenanceDepartmentItem");
                });

            modelBuilder.Entity("web_req_volcano.Models.MaintenanceDepartmentFile", b =>
                {
                    b.HasOne("web_req_volcano.Models.MaintenanceDepartment", "MaintenanceDepartment")
                        .WithMany("MaintenanceDepartmentFiles")
                        .HasForeignKey("MaintenanceDepartmentId")
                        .HasConstraintName("FK_MaintenanceDepartment_Files_MaintenanceDepartment");

                    b.Navigation("MaintenanceDepartment");
                });

            modelBuilder.Entity("web_req_volcano.Models.MaintenanceReport", b =>
                {
                    b.HasOne("web_req_volcano.Models.Cust", "Cust")
                        .WithMany("MaintenanceReports")
                        .HasForeignKey("CustId")
                        .IsRequired()
                        .HasConstraintName("FK_MaintenanceReport_Cust");

                    b.HasOne("web_req_volcano.Models.Emp", "MaintenanceReportEmpNavigation")
                        .WithMany("MaintenanceReports")
                        .HasForeignKey("MaintenanceReportEmp")
                        .IsRequired()
                        .HasConstraintName("FK_MaintenanceReport_Emp");

                    b.Navigation("Cust");

                    b.Navigation("MaintenanceReportEmpNavigation");
                });

            modelBuilder.Entity("web_req_volcano.Models.MaintenanceReportFile", b =>
                {
                    b.HasOne("web_req_volcano.Models.MaintenanceReport", "MaintenanceReport")
                        .WithMany("MaintenanceReportFiles")
                        .HasForeignKey("MaintenanceReportId")
                        .HasConstraintName("FK_MaintenanceReport_Files_MaintenanceReport");

                    b.Navigation("MaintenanceReport");
                });

            modelBuilder.Entity("web_req_volcano.Models.ProjectCertificate", b =>
                {
                    b.HasOne("web_req_volcano.Models.Cust", "Cust")
                        .WithMany("ProjectCertificates")
                        .HasForeignKey("CustId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectCertificates_Cust");

                    b.HasOne("web_req_volcano.Models.Emp", "ProjectCertificatesEmpNavigation")
                        .WithMany("ProjectCertificates")
                        .HasForeignKey("ProjectCertificatesEmp")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectCertificates_Emp");

                    b.Navigation("Cust");

                    b.Navigation("ProjectCertificatesEmpNavigation");
                });

            modelBuilder.Entity("web_req_volcano.Models.ProjectCertificatesFile", b =>
                {
                    b.HasOne("web_req_volcano.Models.ProjectCertificate", "ProjectCertificates")
                        .WithMany("ProjectCertificatesFiles")
                        .HasForeignKey("ProjectCertificatesId")
                        .HasConstraintName("FK_ProjectCertificates_Files_ProjectCertificates");

                    b.Navigation("ProjectCertificates");
                });

            modelBuilder.Entity("web_req_volcano.Models.PublicCompanyFile", b =>
                {
                    b.HasOne("web_req_volcano.Models.PublicCompany", "PublicCompany")
                        .WithMany("PublicCompanyFiles")
                        .HasForeignKey("PublicCompanyId")
                        .HasConstraintName("FK_PublicCompany_Files_PublicCompany");

                    b.Navigation("PublicCompany");
                });

            modelBuilder.Entity("web_req_volcano.Models.PublicCompanySection", b =>
                {
                    b.HasOne("web_req_volcano.Models.PublicCompany", "PublicCompany")
                        .WithMany("PublicCompanySections")
                        .HasForeignKey("PublicCompanyId")
                        .HasConstraintName("FK_PublicCompanySection_PublicCompanySection");

                    b.HasOne("web_req_volcano.Models.Section", "Sec")
                        .WithMany("PublicCompanySections")
                        .HasForeignKey("SecId")
                        .HasConstraintName("FK_PublicCompanySection_Section");

                    b.Navigation("PublicCompany");

                    b.Navigation("Sec");
                });

            modelBuilder.Entity("web_req_volcano.Models.PurchaseOrder", b =>
                {
                    b.HasOne("web_req_volcano.Models.Emp", "PurchaseOrderEmpFromNavigation")
                        .WithMany("PurchaseOrderPurchaseOrderEmpFromNavigations")
                        .HasForeignKey("PurchaseOrderEmpFrom")
                        .IsRequired()
                        .HasConstraintName("FK_PurchaseOrder_Emp1");

                    b.HasOne("web_req_volcano.Models.Emp", "PurchaseOrderEmpToNavigation")
                        .WithMany("PurchaseOrderPurchaseOrderEmpToNavigations")
                        .HasForeignKey("PurchaseOrderEmpTo")
                        .IsRequired()
                        .HasConstraintName("FK_PurchaseOrder_Emp");

                    b.Navigation("PurchaseOrderEmpFromNavigation");

                    b.Navigation("PurchaseOrderEmpToNavigation");
                });

            modelBuilder.Entity("web_req_volcano.Models.PurchaseOrderItem", b =>
                {
                    b.HasOne("web_req_volcano.Models.Item", "Item")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK_PurchaseOrderItem_Item");

                    b.HasOne("web_req_volcano.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("PurchaseOrderId")
                        .IsRequired()
                        .HasConstraintName("FK_PurchaseOrderItem_PurchaseOrder");

                    b.Navigation("Item");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("web_req_volcano.Models.RequestQuote", b =>
                {
                    b.HasOne("web_req_volcano.Models.Cust", "RequestQuoteCust")
                        .WithMany("RequestQuotes")
                        .HasForeignKey("RequestQuoteCustId")
                        .IsRequired()
                        .HasConstraintName("FK_RequestQuote_Cust");

                    b.HasOne("web_req_volcano.Models.Emp", "RequestQuoteEmp")
                        .WithMany("RequestQuotes")
                        .HasForeignKey("RequestQuoteEmpId")
                        .IsRequired()
                        .HasConstraintName("FK_RequestQuote_Emp");

                    b.HasOne("web_req_volcano.Models.Item", "RequestQuoteItem")
                        .WithMany("RequestQuotes")
                        .HasForeignKey("RequestQuoteItemId")
                        .IsRequired()
                        .HasConstraintName("FK_RequestQuote_Item");

                    b.HasOne("web_req_volcano.Models.Offer", "RequestQuoteOffer")
                        .WithMany("RequestQuotes")
                        .HasForeignKey("RequestQuoteOfferId")
                        .IsRequired()
                        .HasConstraintName("FK_RequestQuote_Offer");

                    b.Navigation("RequestQuoteCust");

                    b.Navigation("RequestQuoteEmp");

                    b.Navigation("RequestQuoteItem");

                    b.Navigation("RequestQuoteOffer");
                });

            modelBuilder.Entity("web_req_volcano.Models.RequestQuoteFile", b =>
                {
                    b.HasOne("web_req_volcano.Models.RequestQuote", "RequestQuote")
                        .WithMany("RequestQuoteFiles")
                        .HasForeignKey("RequestQuoteId")
                        .HasConstraintName("FK_RequestQuote_Files_RequestQuote");

                    b.Navigation("RequestQuote");
                });

            modelBuilder.Entity("web_req_volcano.Models.Car", b =>
                {
                    b.Navigation("DeliveryReceiptCars");
                });

            modelBuilder.Entity("web_req_volcano.Models.CarInv", b =>
                {
                    b.Navigation("CarInvFiles");
                });

            modelBuilder.Entity("web_req_volcano.Models.CompanyPaper", b =>
                {
                    b.Navigation("CompanyPapersFiles");
                });

            modelBuilder.Entity("web_req_volcano.Models.Covenant", b =>
                {
                    b.Navigation("DeliveryReceiptCovenants");
                });

            modelBuilder.Entity("web_req_volcano.Models.Cust", b =>
                {
                    b.Navigation("CustomerStatements");

                    b.Navigation("EngineeringDepartments");

                    b.Navigation("MaintenanceDepartments");

                    b.Navigation("MaintenanceReports");

                    b.Navigation("ProjectCertificates");

                    b.Navigation("RequestQuotes");
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptCar", b =>
                {
                    b.Navigation("DeliveryReceiptCarFiles");
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptCovenant", b =>
                {
                    b.Navigation("DeliveryReceiptCovenantFiles");
                });

            modelBuilder.Entity("web_req_volcano.Models.DeliveryReceiptRequest", b =>
                {
                    b.Navigation("DeliveryReceiptRequestFiles");
                });

            modelBuilder.Entity("web_req_volcano.Models.Emp", b =>
                {
                    b.Navigation("CustomerStatementCustomerStatementEmpFromNavigations");

                    b.Navigation("CustomerStatementCustomerStatementEmpToNavigations");

                    b.Navigation("Custs");

                    b.Navigation("DeliveryReceiptCarDeliveryReceiptCarEmpFromNavigations");

                    b.Navigation("DeliveryReceiptCarDeliveryReceiptCarEmpToNavigations");

                    b.Navigation("DeliveryReceiptCovenantDeliveryReceiptCovenantEmpFromNavigations");

                    b.Navigation("DeliveryReceiptCovenantDeliveryReceiptCovenantEmpToNavigations");

                    b.Navigation("DeliveryReceiptRequestDeliveryReceiptRequestEmpFromNavigations");

                    b.Navigation("DeliveryReceiptRequestDeliveryReceiptRequestEmpToNavigations");

                    b.Navigation("EngineeringDepartment")
                        .IsRequired();

                    b.Navigation("MaintenanceDepartments");

                    b.Navigation("MaintenanceReports");

                    b.Navigation("ProjectCertificates");

                    b.Navigation("PurchaseOrderPurchaseOrderEmpFromNavigations");

                    b.Navigation("PurchaseOrderPurchaseOrderEmpToNavigations");

                    b.Navigation("RequestQuotes");
                });

            modelBuilder.Entity("web_req_volcano.Models.EngineeringDepartment", b =>
                {
                    b.Navigation("EngineeringDepartmentFiles");
                });

            modelBuilder.Entity("web_req_volcano.Models.Inv", b =>
                {
                    b.Navigation("InvFiles");
                });

            modelBuilder.Entity("web_req_volcano.Models.Item", b =>
                {
                    b.Navigation("EngineeringDepartments");

                    b.Navigation("Invs");

                    b.Navigation("MaintenanceDepartments");

                    b.Navigation("PurchaseOrderItems");

                    b.Navigation("RequestQuotes");
                });

            modelBuilder.Entity("web_req_volcano.Models.MaintenanceDepartment", b =>
                {
                    b.Navigation("MaintenanceDepartmentFiles");
                });

            modelBuilder.Entity("web_req_volcano.Models.MaintenanceReport", b =>
                {
                    b.Navigation("MaintenanceReportFiles");
                });

            modelBuilder.Entity("web_req_volcano.Models.Nationality", b =>
                {
                    b.Navigation("Emps");
                });

            modelBuilder.Entity("web_req_volcano.Models.Offer", b =>
                {
                    b.Navigation("RequestQuotes");
                });

            modelBuilder.Entity("web_req_volcano.Models.Paper", b =>
                {
                    b.Navigation("CompanyPapers");
                });

            modelBuilder.Entity("web_req_volcano.Models.ProjectCertificate", b =>
                {
                    b.Navigation("ProjectCertificatesFiles");
                });

            modelBuilder.Entity("web_req_volcano.Models.PublicCompany", b =>
                {
                    b.Navigation("PublicCompanyFiles");

                    b.Navigation("PublicCompanySections");
                });

            modelBuilder.Entity("web_req_volcano.Models.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderItems");
                });

            modelBuilder.Entity("web_req_volcano.Models.Request", b =>
                {
                    b.Navigation("DeliveryReceiptRequests");
                });

            modelBuilder.Entity("web_req_volcano.Models.RequestQuote", b =>
                {
                    b.Navigation("RequestQuoteFiles");
                });

            modelBuilder.Entity("web_req_volcano.Models.Section", b =>
                {
                    b.Navigation("Emps");

                    b.Navigation("PublicCompanySections");
                });

            modelBuilder.Entity("web_req_volcano.Models.VehicleType", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
